# See: https://docs.github.com/en/actions/writing-workflows
---
name: Build & Release ASIMOV rust module

on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        default: ${{ github.ref_name }}
      create_release:
        required: false
        type: boolean
        default: true
      update_homebrew_tap:
        required: false
        type: boolean
        default: false
      update_scoop_bucket:
        required: false
        type: boolean
        default: false
      update_crates_io:
        required: false
        type: boolean
        default: false
      brew_build_depends_on:
        required: false
        type: string
      brew_install_step:
        required: false
        type: string
      rust_toolchain:
        required: false
        type: string
        default: "1.85.0"
      link_old_glibc:
        required: false
        type: boolean
        default: true
      tweet_release:
        required: false
        type: boolean
        default: false
      linux_x86_dependencies:
        required: false
        description: |
          Linux x86 dependencies step. Will be executed before the build.
          Takes precedence over `linux_dependencies`.
        type: string
      linux_arm_dependencies:
        required: false
        description: |
          Linux ARM dependencies step. Will be executed before the build.
          Takes precedence over `linux_dependencies`.
        type: string
      linux_dependencies:
        required: false
        description: |
          Linux dependencies step. Will be executed before the build.
        type: string
      macos_x86_dependencies:
        required: false
        description: |
          macOS x86 dependencies step. Will be executed before the build.
          Takes precedence over `macos_dependencies`.
        type: string
      macos_arm_dependencies:
        required: false
        description: |
          macOS ARM dependencies step. Will be executed before the build.
          Takes precedence over `macos_dependencies`.
        type: string
      macos_dependencies:
        required: false
        description: |
          macOS dependencies step. Will be executed before the build.
        type: string
      windows_dependencies:
        required: false
        description: |
          Windows dependencies step. Will be executed before the build.
        type: string
      brew_linux_x86_dependencies:
        required: false
        description: |
          Linux x86 dependencies step exclusive for Homebrew. Will be executed before the build.
        type: string
      brew_macos_x86_dependencies:
        required: false
        description: |
          macOS x86 dependencies step exclusive for Homebrew. Will be executed before the build.
        type: string
      brew_macos_arm_dependencies:
        required: false
        description: |
          macOS ARM dependencies step exclusive for Homebrew. Will be executed before the build.
        type: string
      build-linux-x86-gnu:
        required: false
        description: Build Linux x86 GNU binary?
        type: boolean
        default: true
      build-linux-x86-musl:
        required: false
        description: Build Linux x86 MUSL binary?
        type: boolean
        default: true
      build-linux-arm-gnu:
        required: false
        description: Build Linux ARM GNU binary?
        type: boolean
        default: true
      build-linux-arm-musl:
        required: false
        description: Build Linux ARM MUSL binary?
        type: boolean
        default: true
      build-macos-x86:
        required: false
        description: Build macOS x86 binary?
        type: boolean
        default: true
      build-macos-arm:
        required: false
        description: Build macOS ARM binary?
        type: boolean
        default: true
      build-windows:
        required: false
        description: Build Windows binary?
        type: boolean
        default: true
      build-windows-native:
        required: false
        description: Build Windows binary natively (meaning on Windows, without cross-compiling)?
        type: boolean
        default: false
    secrets:
      ASIMOV_APP_ID:
        required: true
      ASIMOV_APP_PRIVATE_KEY:
        required: true
      CRATES_TOKEN:
        required: false
      X_APP_KEY:
        required: false
      X_APP_SECRET:
        required: false
      X_ACCESS_TOKEN:
        required: false
      X_ACCESS_SECRET:
        required: false

jobs:
  build:
    name: Build & Release Rust package
    uses: asimov-platform/actions/.github/workflows/build-and-release-rust-package.yaml@master
    secrets:
      ASIMOV_APP_ID: ${{ secrets.ASIMOV_APP_ID }}
      ASIMOV_APP_PRIVATE_KEY: ${{ secrets.ASIMOV_APP_PRIVATE_KEY }}
      CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}
    with:
      version: ${{ inputs.version }}
      create_release: ${{ inputs.create_release }}
      update_homebrew_tap: ${{ inputs.update_homebrew_tap }}
      update_scoop_bucket: ${{ inputs.update_scoop_bucket }}
      update_crates_io: ${{ inputs.update_crates_io }}
      brew_build_depends_on: ${{ inputs.brew_build_depends_on }}
      brew_install_step: ${{ inputs.brew_install_step }}
      rust_toolchain: ${{ inputs.rust_toolchain }}
      link_old_glibc: ${{ inputs.link_old_glibc }}
      linux_dependencies: ${{ inputs.linux_dependencies }}
      linux_x86_dependencies: ${{ inputs.linux_x86_dependencies }}
      linux_arm_dependencies: ${{ inputs.linux_arm_dependencies }}
      macos_dependencies: ${{ inputs.macos_dependencies }}
      macos_x86_dependencies: ${{ inputs.macos_x86_dependencies }}
      macos_arm_dependencies: ${{ inputs.macos_arm_dependencies }}
      windows_dependencies: ${{ inputs.windows_dependencies }}
      brew_linux_x86_dependencies: ${{ inputs.brew_linux_x86_dependencies }}
      brew_macos_x86_dependencies: ${{ inputs.brew_macos_x86_dependencies }}
      brew_macos_arm_dependencies: ${{ inputs.brew_macos_arm_dependencies }}
      build-linux-x86-gnu: ${{ inputs.build-linux-x86-gnu }}
      build-linux-x86-musl: ${{ inputs.build-linux-x86-musl }}
      build-linux-arm-gnu: ${{ inputs.build-linux-arm-gnu }}
      build-linux-arm-musl: ${{ inputs.build-linux-arm-musl }}
      build-macos-x86: ${{ inputs.build-macos-x86 }}
      build-macos-arm: ${{ inputs.build-macos-arm }}
      build-windows: ${{ inputs.build-windows }}
      build-windows-native: ${{ inputs.build-windows-native }}

  tweet-release:
    name: Tweet release
    if: ${{ inputs.tweet_release }}
    needs: build
    uses: asimov-modules/.github/.github/workflows/tweet.yaml@master
    secrets:
      X_APP_KEY: ${{ secrets.X_APP_KEY }}
      X_APP_SECRET: ${{ secrets.X_APP_SECRET }}
      X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
      X_ACCESS_SECRET: ${{ secrets.X_ACCESS_SECRET }}
    with:
      message: |
        ðŸ“¦ ${{ github.event.repository.name }} ${{ github.ref_name }} has been released:
        ${{ github.server_url }}/${{ github.repository }}/releases/tag/${{ github.ref_name }}
